(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{503:function(t,e,s){"use strict";s.r(e);var a=s(2),r=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"dledger快速搭建"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dledger快速搭建"}},[t._v("#")]),t._v(" Dledger快速搭建")]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"前言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),s("p",[t._v("该文档主要介绍如何快速构建和部署基于 DLedger 的可以自动容灾切换的 RocketMQ 集群。")]),t._v(" "),s("p",[t._v("详细的新集群部署和旧集群升级指南请参考 "),s("RouterLink",{attrs:{to:"/pages/document/rocketmq/dledger/quick_start/deploy_guide.html"}},[t._v("部署指南")]),t._v("。")],1),t._v(" "),s("h3",{attrs:{id:"_1-源码构建"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-源码构建"}},[t._v("#")]),t._v(" 1. 源码构建")]),t._v(" "),s("p",[t._v("构建分为两个部分，需要先构建 DLedger，然后 构建 RocketMQ")]),t._v(" "),s("h4",{attrs:{id:"_1-1-构建-dledger"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-构建-dledger"}},[t._v("#")]),t._v(" 1.1 构建 DLedger")]),t._v(" "),s("p",[s("code",[t._v("git clone https://github.com/openmessaging/openmessaging-storage-dledger.git")])]),t._v(" "),s("p",[s("code",[t._v("cd openmessaging-storage-dledger")])]),t._v(" "),s("p",[s("code",[t._v("mvn clean install -DskipTests")])]),t._v(" "),s("h4",{attrs:{id:"_1-2-构建-rocketmq"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-构建-rocketmq"}},[t._v("#")]),t._v(" 1.2 构建 RocketMQ")]),t._v(" "),s("p",[s("code",[t._v("git clone https://github.com/apache/rocketmq.git")])]),t._v(" "),s("p",[s("code",[t._v("cd rocketmq")])]),t._v(" "),s("p",[s("code",[t._v("git checkout -b store_with_dledger origin/store_with_dledger")])]),t._v(" "),s("p",[s("code",[t._v("mvn -Prelease-all -DskipTests clean install -U")])]),t._v(" "),s("h3",{attrs:{id:"_2-快速部署"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-快速部署"}},[t._v("#")]),t._v(" 2. 快速部署")]),t._v(" "),s("p",[t._v("在构建成功后")]),t._v(" "),s("p",[s("code",[t._v("cd distribution/target/apache-rocketmq")])]),t._v(" "),s("p",[s("code",[t._v("sh bin/dledger/fast-try.sh start")])]),t._v(" "),s("p",[t._v("如果上面的步骤执行成功，可以通过 mqadmin 运维命令查看集群状态。")]),t._v(" "),s("p",[s("code",[t._v("sh bin/mqadmin clusterList -n 127.0.0.1:9876")])]),t._v(" "),s("p",[t._v("顺利的话，会看到如下内容：")]),t._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"ClusterList","data-src":"https://img.alicdn.com/5476e8b07b923/TB11Z.ZyCzqK1RjSZFLXXcn2XXa",loading:"lazy"}})]),t._v(" "),s("p",[t._v("（BID 为 0 的表示 Master，其余都是 Follower）")]),t._v(" "),s("p",[t._v("启动成功，现在可以向集群收发消息，并进行容灾切换测试了。")]),t._v(" "),s("p",[t._v("关闭快速集群，可以执行：")]),t._v(" "),s("p",[s("code",[t._v("sh bin/dledger/fast-try.sh stop")])]),t._v(" "),s("p",[t._v("快速部署，默认配置在 conf/dledger 里面，默认的存储路径在 /tmp/rmqstore。")]),t._v(" "),s("h3",{attrs:{id:"_3-容灾切换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-容灾切换"}},[t._v("#")]),t._v(" 3. 容灾切换")]),t._v(" "),s("p",[t._v("部署成功，杀掉 Leader 之后（在上面的例子中，杀掉端口 30931 所在的进程），等待约 10s 左右，用 clusterList 命令查看集群，就会发现 Leader 切换到另一个节点了。")])])}),[],!1,null,null,null);e.default=r.exports}}]);